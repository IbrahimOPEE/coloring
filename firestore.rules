rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAnonymous() {
      return request.auth != null && request.auth.token.firebase.sign_in_provider == 'anonymous';
    }
    
    function isAdmin() {
      // Either the localStorage has admin = true or the user's custom token has admin claim
      return isAuthenticated() && 
             (request.auth.token.admin == true || 
              // If authenticated anonymously and localStorage has isAdmin = true
              (isAnonymous() && request.auth != null));
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidAmount(amount) {
      return amount is number && amount > 0;
    }
    
    function isValidGameResult(result) {
      return result.number is number && 
             result.number >= 0 && 
             result.number <= 9 && 
             (result.color in ['RED', 'GREEN', 'VIOLET', 'VIOLET GREEN']) && 
             (result.size in ['BIG', 'SMALL']);
    }

    // Allow anonymous admin to read and write all documents
    match /{document=**} {
      allow read: if isAnonymous() && (request.auth != null);
      allow write: if isAnonymous() && (request.auth != null);
    }
    
    // Game Results collection - Allow public read
    match /gameResults/{period} {
      allow read: if true;  // Allow public read access
    }
    
    // Game State collection - Allow public read
    match /gameState/{stateId} {
      allow read: if true;  // Allow public read access
    }
    
    // Users collection - Allow anonymous users
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAnonymous());
      allow create: if isAuthenticated() && (isOwner(userId) || isAnonymous());
      allow update: if isAuthenticated() && (isOwner(userId) || isAnonymous());
    }
    
    // Transactions collection - Allow anonymous users
    match /transactions/{transactionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isAnonymous();
    }
    
    // Daily Transactions collection - Allow anonymous users
    match /dailyTransactions/{date} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Game History collection - Allow anonymous users
    match /gameHistory/{historyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isAnonymous();
    }
  }
} 