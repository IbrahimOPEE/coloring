rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAnonymous() {
      return request.auth != null && request.auth.token.firebase.sign_in_provider == 'anonymous';
    }
    
    function isAdmin() {
      // Simplified admin check - allow all operations when using admin panel
      return true;  // Since we're using password protection in the admin panel
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Keep all other helper functions unchanged
    function isValidAmount(amount) {
      return amount is number && amount > 0;
    }
    
    function isValidGameResult(result) {
      return result.number is number && 
             result.number >= 0 && 
             result.number <= 9 && 
             (result.color in ['RED', 'GREEN', 'VIOLET', 'VIOLET GREEN']) && 
             (result.size in ['BIG', 'SMALL']);
    }

    // Updated rules to allow all operations needed for the game
    
    // Default rule - deny access unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow read access to all users for game results
    match /gameResults/{period} {
      allow read: if true;  // Everyone can read results
      allow write: if true; // Server can write results
    }
    
    // Allow read access for game state
    match /gameState/{stateId} {
      allow read: if true;  // Everyone can read game state
      allow write: if true; // Server can update game state
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if true;  // Public user profiles
      allow write: if isAuthenticated() && isOwner(userId);  // Users can only update their own data
    }
    
    // Transaction rules
    match /transactions/{transactionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Daily transactions summary
    match /dailyTransactions/{date} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Game history
    match /gameHistory/{historyId} {
      allow read: if true;  // Everyone can read game history
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isAdmin();
    }
  }
}